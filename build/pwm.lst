ARM GAS  C:\Users\flynn\AppData\Local\Temp\cc5Q3Opi.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"pwm.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.PWM1_start,"ax",%progbits
  18              		.align	1
  19              		.global	PWM1_start
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	PWM1_start:
  25              	.LFB40:
  26              		.file 1 "Core/Src/pwm.c"
   1:Core/Src/pwm.c **** /*
   2:Core/Src/pwm.c ****  * pwm.c
   3:Core/Src/pwm.c ****  *
   4:Core/Src/pwm.c ****  *  Created on: 20 Jun 2021
   5:Core/Src/pwm.c ****  *      Author: flynn
   6:Core/Src/pwm.c ****  */
   7:Core/Src/pwm.c **** 
   8:Core/Src/pwm.c **** #include "tim.h"
   9:Core/Src/pwm.c **** #include "main.h"
  10:Core/Src/pwm.c **** 
  11:Core/Src/pwm.c **** #define CLK_SPEED 16E6
  12:Core/Src/pwm.c **** #define MILLISECOND 1E-3
  13:Core/Src/pwm.c **** #define SERVO_RANGE 180
  14:Core/Src/pwm.c **** 
  15:Core/Src/pwm.c **** // TODO catch the HAL_StatusTypeDef and check for failures 
  16:Core/Src/pwm.c **** // TODO figure out a good 'defualt' position for the servo
  17:Core/Src/pwm.c **** void PWM1_start()
  18:Core/Src/pwm.c **** {
  27              		.loc 1 18 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 10B5     		push	{r4, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  19:Core/Src/pwm.c **** 	HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);
  36              		.loc 1 19 2 view .LVU1
  37 0002 0021     		movs	r1, #0
  38 0004 0148     		ldr	r0, .L2
  39 0006 FFF7FEFF 		bl	HAL_TIM_PWM_Start
ARM GAS  C:\Users\flynn\AppData\Local\Temp\cc5Q3Opi.s 			page 2


  40              	.LVL0:
  20:Core/Src/pwm.c **** }
  41              		.loc 1 20 1 is_stmt 0 view .LVU2
  42              		@ sp needed
  43 000a 10BD     		pop	{r4, pc}
  44              	.L3:
  45              		.align	2
  46              	.L2:
  47 000c 00000000 		.word	htim2
  48              		.cfi_endproc
  49              	.LFE40:
  51              		.global	__aeabi_ui2d
  52              		.global	__aeabi_ddiv
  53              		.global	__aeabi_d2f
  54              		.global	__aeabi_ui2f
  55              		.global	__aeabi_fmul
  56              		.global	__aeabi_f2d
  57              		.global	__aeabi_dmul
  58              		.global	__aeabi_fadd
  59              		.global	__aeabi_fdiv
  60              		.global	__aeabi_dadd
  61              		.global	__aeabi_d2iz
  62              		.section	.text.PWM1_setPos,"ax",%progbits
  63              		.align	1
  64              		.global	PWM1_setPos
  65              		.syntax unified
  66              		.code	16
  67              		.thumb_func
  69              	PWM1_setPos:
  70              	.LVL1:
  71              	.LFB41:
  21:Core/Src/pwm.c **** 
  22:Core/Src/pwm.c **** // Sets the angle of PWM 1 (for servo motors). Angle is not the same as duty cycle!
  23:Core/Src/pwm.c **** void PWM1_setPos(float angle)
  24:Core/Src/pwm.c **** {
  72              		.loc 1 24 1 is_stmt 1 view -0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		.loc 1 24 1 is_stmt 0 view .LVU4
  77 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  78              	.LCFI1:
  79              		.cfi_def_cfa_offset 24
  80              		.cfi_offset 3, -24
  81              		.cfi_offset 4, -20
  82              		.cfi_offset 5, -16
  83              		.cfi_offset 6, -12
  84              		.cfi_offset 7, -8
  85              		.cfi_offset 14, -4
  86 0002 041C     		adds	r4, r0, #0
  25:Core/Src/pwm.c **** 	// Determin counts per pulse
  26:Core/Src/pwm.c **** 	float fPwm = CLK_SPEED/((htim2.Init.Prescaler + 1)*(htim2.Init.Period + 1));
  87              		.loc 1 26 2 is_stmt 1 view .LVU5
  88              		.loc 1 26 37 is_stmt 0 view .LVU6
  89 0004 1B4B     		ldr	r3, .L5
  90              		.loc 1 26 48 view .LVU7
  91 0006 5A68     		ldr	r2, [r3, #4]
ARM GAS  C:\Users\flynn\AppData\Local\Temp\cc5Q3Opi.s 			page 3


  92 0008 501C     		adds	r0, r2, #1
  93              	.LVL2:
  94              		.loc 1 26 64 view .LVU8
  95 000a DD68     		ldr	r5, [r3, #12]
  96              		.loc 1 26 72 view .LVU9
  97 000c 0135     		adds	r5, r5, #1
  98              		.loc 1 26 52 view .LVU10
  99 000e 6843     		muls	r0, r5
 100              		.loc 1 26 24 view .LVU11
 101 0010 FFF7FEFF 		bl	__aeabi_ui2d
 102              	.LVL3:
 103 0014 0200     		movs	r2, r0
 104 0016 0B00     		movs	r3, r1
 105 0018 0020     		movs	r0, #0
 106 001a 1749     		ldr	r1, .L5+4
 107 001c FFF7FEFF 		bl	__aeabi_ddiv
 108              	.LVL4:
 109              		.loc 1 26 8 view .LVU12
 110 0020 FFF7FEFF 		bl	__aeabi_d2f
 111              	.LVL5:
 112 0024 061C     		adds	r6, r0, #0
 113              	.LVL6:
  27:Core/Src/pwm.c **** 	float cps = (htim2.Init.Period + 1)*fPwm;
 114              		.loc 1 27 2 is_stmt 1 view .LVU13
 115              		.loc 1 27 37 is_stmt 0 view .LVU14
 116 0026 2800     		movs	r0, r5
 117              	.LVL7:
 118              		.loc 1 27 37 view .LVU15
 119 0028 FFF7FEFF 		bl	__aeabi_ui2f
 120              	.LVL8:
 121              		.loc 1 27 8 view .LVU16
 122 002c 311C     		adds	r1, r6, #0
 123 002e FFF7FEFF 		bl	__aeabi_fmul
 124              	.LVL9:
  28:Core/Src/pwm.c **** 
  29:Core/Src/pwm.c **** 	// Determin pulse length to get the desisered angle on the servo (servos 1ms 0, 2ms 180)
  30:Core/Src/pwm.c **** 	// Round down
  31:Core/Src/pwm.c **** 	int pulse = (int)(cps*MILLISECOND*(0.5 + 2*angle/SERVO_RANGE));
 125              		.loc 1 31 2 is_stmt 1 view .LVU17
 126              		.loc 1 31 23 is_stmt 0 view .LVU18
 127 0032 FFF7FEFF 		bl	__aeabi_f2d
 128              	.LVL10:
 129              		.loc 1 31 23 view .LVU19
 130 0036 114A     		ldr	r2, .L5+8
 131 0038 114B     		ldr	r3, .L5+12
 132 003a FFF7FEFF 		bl	__aeabi_dmul
 133              	.LVL11:
 134 003e 0600     		movs	r6, r0
 135              	.LVL12:
 136              		.loc 1 31 23 view .LVU20
 137 0040 0F00     		movs	r7, r1
 138              		.loc 1 31 44 view .LVU21
 139 0042 211C     		adds	r1, r4, #0
 140 0044 201C     		adds	r0, r4, #0
 141 0046 FFF7FEFF 		bl	__aeabi_fadd
 142              	.LVL13:
 143              		.loc 1 31 50 view .LVU22
ARM GAS  C:\Users\flynn\AppData\Local\Temp\cc5Q3Opi.s 			page 4


 144 004a 0E49     		ldr	r1, .L5+16
 145 004c FFF7FEFF 		bl	__aeabi_fdiv
 146              	.LVL14:
 147 0050 FFF7FEFF 		bl	__aeabi_f2d
 148              	.LVL15:
 149              		.loc 1 31 41 view .LVU23
 150 0054 0022     		movs	r2, #0
 151 0056 0C4B     		ldr	r3, .L5+20
 152 0058 FFF7FEFF 		bl	__aeabi_dadd
 153              	.LVL16:
 154 005c 0200     		movs	r2, r0
 155 005e 0B00     		movs	r3, r1
 156              		.loc 1 31 35 view .LVU24
 157 0060 3000     		movs	r0, r6
 158 0062 3900     		movs	r1, r7
 159 0064 FFF7FEFF 		bl	__aeabi_dmul
 160              	.LVL17:
 161              		.loc 1 31 6 view .LVU25
 162 0068 FFF7FEFF 		bl	__aeabi_d2iz
 163              	.LVL18:
  32:Core/Src/pwm.c **** 
  33:Core/Src/pwm.c **** 	// There might be a HAL function for this but i cant find it
  34:Core/Src/pwm.c **** 	TIM2->CCR1 = pulse;
 164              		.loc 1 34 2 is_stmt 1 view .LVU26
 165              		.loc 1 34 13 is_stmt 0 view .LVU27
 166 006c 8023     		movs	r3, #128
 167 006e DB05     		lsls	r3, r3, #23
 168 0070 5863     		str	r0, [r3, #52]
  35:Core/Src/pwm.c **** }
 169              		.loc 1 35 1 view .LVU28
 170              		@ sp needed
 171              	.LVL19:
 172              		.loc 1 35 1 view .LVU29
 173 0072 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 174              	.L6:
 175              		.align	2
 176              	.L5:
 177 0074 00000000 		.word	htim2
 178 0078 80846E41 		.word	1097761920
 179 007c FCA9F1D2 		.word	-755914244
 180 0080 4D62503F 		.word	1062232653
 181 0084 00003443 		.word	1127481344
 182 0088 0000E03F 		.word	1071644672
 183              		.cfi_endproc
 184              	.LFE41:
 186              		.section	.text.PWM1_setTime,"ax",%progbits
 187              		.align	1
 188              		.global	PWM1_setTime
 189              		.syntax unified
 190              		.code	16
 191              		.thumb_func
 193              	PWM1_setTime:
 194              	.LVL20:
 195              	.LFB42:
  36:Core/Src/pwm.c **** 
  37:Core/Src/pwm.c **** void PWM1_setTime(float time)
  38:Core/Src/pwm.c **** {
ARM GAS  C:\Users\flynn\AppData\Local\Temp\cc5Q3Opi.s 			page 5


 196              		.loc 1 38 1 is_stmt 1 view -0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              		.loc 1 38 1 is_stmt 0 view .LVU31
 201 0000 70B5     		push	{r4, r5, r6, lr}
 202              	.LCFI2:
 203              		.cfi_def_cfa_offset 16
 204              		.cfi_offset 4, -16
 205              		.cfi_offset 5, -12
 206              		.cfi_offset 6, -8
 207              		.cfi_offset 14, -4
 208 0002 061C     		adds	r6, r0, #0
  39:Core/Src/pwm.c **** 	// Determin counts per pulse
  40:Core/Src/pwm.c **** 	float fPwm = CLK_SPEED/((htim2.Init.Prescaler + 1)*(htim2.Init.Period + 1));
 209              		.loc 1 40 2 is_stmt 1 view .LVU32
 210              		.loc 1 40 37 is_stmt 0 view .LVU33
 211 0004 154B     		ldr	r3, .L8
 212              		.loc 1 40 48 view .LVU34
 213 0006 5A68     		ldr	r2, [r3, #4]
 214 0008 501C     		adds	r0, r2, #1
 215              	.LVL21:
 216              		.loc 1 40 64 view .LVU35
 217 000a DC68     		ldr	r4, [r3, #12]
 218              		.loc 1 40 72 view .LVU36
 219 000c 0134     		adds	r4, r4, #1
 220              		.loc 1 40 52 view .LVU37
 221 000e 6043     		muls	r0, r4
 222              		.loc 1 40 24 view .LVU38
 223 0010 FFF7FEFF 		bl	__aeabi_ui2d
 224              	.LVL22:
 225 0014 0200     		movs	r2, r0
 226 0016 0B00     		movs	r3, r1
 227 0018 0020     		movs	r0, #0
 228 001a 1149     		ldr	r1, .L8+4
 229 001c FFF7FEFF 		bl	__aeabi_ddiv
 230              	.LVL23:
 231              		.loc 1 40 8 view .LVU39
 232 0020 FFF7FEFF 		bl	__aeabi_d2f
 233              	.LVL24:
 234 0024 051C     		adds	r5, r0, #0
 235              	.LVL25:
  41:Core/Src/pwm.c **** 	float cps = (htim2.Init.Period + 1)*fPwm;
 236              		.loc 1 41 2 is_stmt 1 view .LVU40
 237              		.loc 1 41 37 is_stmt 0 view .LVU41
 238 0026 2000     		movs	r0, r4
 239              	.LVL26:
 240              		.loc 1 41 37 view .LVU42
 241 0028 FFF7FEFF 		bl	__aeabi_ui2f
 242              	.LVL27:
 243              		.loc 1 41 8 view .LVU43
 244 002c 291C     		adds	r1, r5, #0
 245 002e FFF7FEFF 		bl	__aeabi_fmul
 246              	.LVL28:
  42:Core/Src/pwm.c **** 
  43:Core/Src/pwm.c **** 	// Determin pulse length to get the desisered angle on the servo (servos 1ms 0, 2ms 180)
  44:Core/Src/pwm.c **** 	// Round down
ARM GAS  C:\Users\flynn\AppData\Local\Temp\cc5Q3Opi.s 			page 6


  45:Core/Src/pwm.c **** 	int pulse = (int)(cps*MILLISECOND*time);
 247              		.loc 1 45 2 is_stmt 1 view .LVU44
 248              		.loc 1 45 23 is_stmt 0 view .LVU45
 249 0032 FFF7FEFF 		bl	__aeabi_f2d
 250              	.LVL29:
 251              		.loc 1 45 23 view .LVU46
 252 0036 0B4A     		ldr	r2, .L8+8
 253 0038 0B4B     		ldr	r3, .L8+12
 254 003a FFF7FEFF 		bl	__aeabi_dmul
 255              	.LVL30:
 256 003e 0400     		movs	r4, r0
 257 0040 0D00     		movs	r5, r1
 258              	.LVL31:
 259              		.loc 1 45 35 view .LVU47
 260 0042 301C     		adds	r0, r6, #0
 261 0044 FFF7FEFF 		bl	__aeabi_f2d
 262              	.LVL32:
 263 0048 2200     		movs	r2, r4
 264 004a 2B00     		movs	r3, r5
 265 004c FFF7FEFF 		bl	__aeabi_dmul
 266              	.LVL33:
 267              		.loc 1 45 6 view .LVU48
 268 0050 FFF7FEFF 		bl	__aeabi_d2iz
 269              	.LVL34:
  46:Core/Src/pwm.c **** 
  47:Core/Src/pwm.c **** 	// There might be a HAL function for this but i cant find it
  48:Core/Src/pwm.c **** 	TIM2->CCR1 = pulse;
 270              		.loc 1 48 2 is_stmt 1 view .LVU49
 271              		.loc 1 48 13 is_stmt 0 view .LVU50
 272 0054 8023     		movs	r3, #128
 273 0056 DB05     		lsls	r3, r3, #23
 274 0058 5863     		str	r0, [r3, #52]
  49:Core/Src/pwm.c **** }
 275              		.loc 1 49 1 view .LVU51
 276              		@ sp needed
 277              	.LVL35:
 278              		.loc 1 49 1 view .LVU52
 279 005a 70BD     		pop	{r4, r5, r6, pc}
 280              	.L9:
 281              		.align	2
 282              	.L8:
 283 005c 00000000 		.word	htim2
 284 0060 80846E41 		.word	1097761920
 285 0064 FCA9F1D2 		.word	-755914244
 286 0068 4D62503F 		.word	1062232653
 287              		.cfi_endproc
 288              	.LFE42:
 290              		.global	__aeabi_i2d
 291              		.global	__aeabi_dsub
 292              		.section	.text.PWM1_getPos,"ax",%progbits
 293              		.align	1
 294              		.global	PWM1_getPos
 295              		.syntax unified
 296              		.code	16
 297              		.thumb_func
 299              	PWM1_getPos:
 300              	.LFB43:
ARM GAS  C:\Users\flynn\AppData\Local\Temp\cc5Q3Opi.s 			page 7


  50:Core/Src/pwm.c **** 
  51:Core/Src/pwm.c **** // Returns the angle of PWM 1, Not the duty cycle.
  52:Core/Src/pwm.c **** float PWM1_getPos()
  53:Core/Src/pwm.c **** {
 301              		.loc 1 53 1 is_stmt 1 view -0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 0
 304              		@ frame_needed = 0, uses_anonymous_args = 0
 305 0000 70B5     		push	{r4, r5, r6, lr}
 306              	.LCFI3:
 307              		.cfi_def_cfa_offset 16
 308              		.cfi_offset 4, -16
 309              		.cfi_offset 5, -12
 310              		.cfi_offset 6, -8
 311              		.cfi_offset 14, -4
  54:Core/Src/pwm.c **** 	int pulse = TIM2->CCR1;
 312              		.loc 1 54 2 view .LVU54
 313              		.loc 1 54 18 is_stmt 0 view .LVU55
 314 0002 8023     		movs	r3, #128
 315 0004 DB05     		lsls	r3, r3, #23
 316 0006 5E6B     		ldr	r6, [r3, #52]
 317              	.LVL36:
  55:Core/Src/pwm.c **** 
  56:Core/Src/pwm.c **** 	float fPwm = CLK_SPEED/((htim2.Init.Prescaler + 1)*(htim2.Init.Period + 1));
 318              		.loc 1 56 2 is_stmt 1 view .LVU56
 319              		.loc 1 56 37 is_stmt 0 view .LVU57
 320 0008 194B     		ldr	r3, .L11
 321              		.loc 1 56 48 view .LVU58
 322 000a 5A68     		ldr	r2, [r3, #4]
 323 000c 501C     		adds	r0, r2, #1
 324              		.loc 1 56 64 view .LVU59
 325 000e DC68     		ldr	r4, [r3, #12]
 326              		.loc 1 56 72 view .LVU60
 327 0010 0134     		adds	r4, r4, #1
 328              		.loc 1 56 52 view .LVU61
 329 0012 6043     		muls	r0, r4
 330              		.loc 1 56 24 view .LVU62
 331 0014 FFF7FEFF 		bl	__aeabi_ui2d
 332              	.LVL37:
 333 0018 0200     		movs	r2, r0
 334 001a 0B00     		movs	r3, r1
 335 001c 0020     		movs	r0, #0
 336 001e 1549     		ldr	r1, .L11+4
 337 0020 FFF7FEFF 		bl	__aeabi_ddiv
 338              	.LVL38:
 339              		.loc 1 56 8 view .LVU63
 340 0024 FFF7FEFF 		bl	__aeabi_d2f
 341              	.LVL39:
 342 0028 051C     		adds	r5, r0, #0
 343              	.LVL40:
  57:Core/Src/pwm.c **** 	float cps = (htim2.Init.Period + 1)*fPwm;
 344              		.loc 1 57 2 is_stmt 1 view .LVU64
 345              		.loc 1 57 37 is_stmt 0 view .LVU65
 346 002a 2000     		movs	r0, r4
 347              	.LVL41:
 348              		.loc 1 57 37 view .LVU66
 349 002c FFF7FEFF 		bl	__aeabi_ui2f
ARM GAS  C:\Users\flynn\AppData\Local\Temp\cc5Q3Opi.s 			page 8


 350              	.LVL42:
 351              		.loc 1 57 8 view .LVU67
 352 0030 291C     		adds	r1, r5, #0
 353 0032 FFF7FEFF 		bl	__aeabi_fmul
 354              	.LVL43:
  58:Core/Src/pwm.c **** 
  59:Core/Src/pwm.c **** 	pulse = pulse - cps*MILLISECOND;
 355              		.loc 1 59 2 is_stmt 1 view .LVU68
 356              		.loc 1 59 21 is_stmt 0 view .LVU69
 357 0036 FFF7FEFF 		bl	__aeabi_f2d
 358              	.LVL44:
 359              		.loc 1 59 21 view .LVU70
 360 003a 0F4A     		ldr	r2, .L11+8
 361 003c 0F4B     		ldr	r3, .L11+12
 362 003e FFF7FEFF 		bl	__aeabi_dmul
 363              	.LVL45:
 364 0042 0400     		movs	r4, r0
 365 0044 0D00     		movs	r5, r1
 366              	.LVL46:
 367              		.loc 1 59 16 view .LVU71
 368 0046 3000     		movs	r0, r6
 369 0048 FFF7FEFF 		bl	__aeabi_i2d
 370              	.LVL47:
 371 004c 2200     		movs	r2, r4
 372 004e 2B00     		movs	r3, r5
 373 0050 FFF7FEFF 		bl	__aeabi_dsub
 374              	.LVL48:
 375              		.loc 1 59 8 view .LVU72
 376 0054 FFF7FEFF 		bl	__aeabi_d2iz
 377              	.LVL49:
  60:Core/Src/pwm.c **** 	return pulse*SERVO_RANGE/(cps*MILLISECOND);
 378              		.loc 1 60 2 is_stmt 1 view .LVU73
 379              		.loc 1 60 14 is_stmt 0 view .LVU74
 380 0058 B423     		movs	r3, #180
 381 005a 5843     		muls	r0, r3
 382              	.LVL50:
 383              		.loc 1 60 26 view .LVU75
 384 005c FFF7FEFF 		bl	__aeabi_i2d
 385              	.LVL51:
 386 0060 2200     		movs	r2, r4
 387 0062 2B00     		movs	r3, r5
 388 0064 FFF7FEFF 		bl	__aeabi_ddiv
 389              	.LVL52:
 390 0068 FFF7FEFF 		bl	__aeabi_d2f
 391              	.LVL53:
  61:Core/Src/pwm.c **** }...
 392              		.loc 1 61 1 view .LVU76
 393              		@ sp needed
 394 006c 70BD     		pop	{r4, r5, r6, pc}
 395              	.L12:
 396 006e C046     		.align	2
 397              	.L11:
 398 0070 00000000 		.word	htim2
 399 0074 80846E41 		.word	1097761920
 400 0078 FCA9F1D2 		.word	-755914244
 401 007c 4D62503F 		.word	1062232653
 402              		.cfi_endproc
ARM GAS  C:\Users\flynn\AppData\Local\Temp\cc5Q3Opi.s 			page 9


 403              	.LFE43:
 405              		.text
 406              	.Letext0:
 407              		.file 2 "c:\\users\\flynn\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 408              		.file 3 "c:\\users\\flynn\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 409              		.file 4 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l031xx.h"
 410              		.file 5 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 411              		.file 6 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_dma.h"
 412              		.file 7 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_tim.h"
 413              		.file 8 "Core/Inc/tim.h"
ARM GAS  C:\Users\flynn\AppData\Local\Temp\cc5Q3Opi.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 pwm.c
C:\Users\flynn\AppData\Local\Temp\cc5Q3Opi.s:18     .text.PWM1_start:0000000000000000 $t
C:\Users\flynn\AppData\Local\Temp\cc5Q3Opi.s:24     .text.PWM1_start:0000000000000000 PWM1_start
C:\Users\flynn\AppData\Local\Temp\cc5Q3Opi.s:47     .text.PWM1_start:000000000000000c $d
C:\Users\flynn\AppData\Local\Temp\cc5Q3Opi.s:63     .text.PWM1_setPos:0000000000000000 $t
C:\Users\flynn\AppData\Local\Temp\cc5Q3Opi.s:69     .text.PWM1_setPos:0000000000000000 PWM1_setPos
C:\Users\flynn\AppData\Local\Temp\cc5Q3Opi.s:177    .text.PWM1_setPos:0000000000000074 $d
C:\Users\flynn\AppData\Local\Temp\cc5Q3Opi.s:187    .text.PWM1_setTime:0000000000000000 $t
C:\Users\flynn\AppData\Local\Temp\cc5Q3Opi.s:193    .text.PWM1_setTime:0000000000000000 PWM1_setTime
C:\Users\flynn\AppData\Local\Temp\cc5Q3Opi.s:283    .text.PWM1_setTime:000000000000005c $d
C:\Users\flynn\AppData\Local\Temp\cc5Q3Opi.s:293    .text.PWM1_getPos:0000000000000000 $t
C:\Users\flynn\AppData\Local\Temp\cc5Q3Opi.s:299    .text.PWM1_getPos:0000000000000000 PWM1_getPos
C:\Users\flynn\AppData\Local\Temp\cc5Q3Opi.s:398    .text.PWM1_getPos:0000000000000070 $d

UNDEFINED SYMBOLS
HAL_TIM_PWM_Start
htim2
__aeabi_ui2d
__aeabi_ddiv
__aeabi_d2f
__aeabi_ui2f
__aeabi_fmul
__aeabi_f2d
__aeabi_dmul
__aeabi_fadd
__aeabi_fdiv
__aeabi_dadd
__aeabi_d2iz
__aeabi_i2d
__aeabi_dsub
