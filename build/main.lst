ARM GAS  C:\Users\flynn\AppData\Local\Temp\ccGmpbYj.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Error_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	Error_Handler
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	Error_Handler:
  25              	.LFB42:
  26              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.</center></h2>
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****  * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****  * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****  *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****  *
  17:Core/Src/main.c ****  ******************************************************************************
  18:Core/Src/main.c ****  */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "i2c.h"
  23:Core/Src/main.c **** #include "tim.h"
  24:Core/Src/main.c **** #include "usart.h"
  25:Core/Src/main.c **** #include "gpio.h"
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  29:Core/Src/main.c **** #include "fsm.h"
  30:Core/Src/main.c **** #include "pwm.h"
  31:Core/Src/main.c **** /* USER CODE END Includes */
  32:Core/Src/main.c **** 
ARM GAS  C:\Users\flynn\AppData\Local\Temp\ccGmpbYj.s 			page 2


  33:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PTD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PD */
  40:Core/Src/main.c **** /* USER CODE END PD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  43:Core/Src/main.c **** /* USER CODE BEGIN PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE END PM */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE BEGIN PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* USER CODE END PV */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  54:Core/Src/main.c **** void SystemClock_Config(void);
  55:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END PFP */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  60:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* USER CODE END 0 */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /**
  65:Core/Src/main.c ****   * @brief  The application entry point.
  66:Core/Src/main.c ****   * @retval int
  67:Core/Src/main.c ****   */
  68:Core/Src/main.c **** int main(void)
  69:Core/Src/main.c **** {
  70:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  71:Core/Src/main.c ****     eFsmPeripheriesData periData;
  72:Core/Src/main.c ****   /* USER CODE END 1 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  77:Core/Src/main.c ****   HAL_Init();
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  80:Core/Src/main.c ****   FSM_init();
  81:Core/Src/main.c ****   /* USER CODE END Init */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* Configure the system clock */
  84:Core/Src/main.c ****   SystemClock_Config();
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* USER CODE END SysInit */
  89:Core/Src/main.c **** 
ARM GAS  C:\Users\flynn\AppData\Local\Temp\ccGmpbYj.s 			page 3


  90:Core/Src/main.c ****   /* Initialize all configured peripherals */
  91:Core/Src/main.c ****   MX_GPIO_Init();
  92:Core/Src/main.c ****   MX_I2C1_Init();
  93:Core/Src/main.c ****   MX_USART2_UART_Init();
  94:Core/Src/main.c ****   MX_TIM2_Init();
  95:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  96:Core/Src/main.c ****   PWM1_start();
  97:Core/Src/main.c ****   /* USER CODE END 2 */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* Infinite loop */
 100:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 101:Core/Src/main.c ****   while (1)
 102:Core/Src/main.c ****   {
 103:Core/Src/main.c ****     /* USER CODE END WHILE */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 106:Core/Src/main.c ****     FSM_reciveCMD(&huart2);
 107:Core/Src/main.c ****     // Update FSM TODO
 108:Core/Src/main.c ****     // Run FSM logic
 109:Core/Src/main.c ****     FSM_step(&periData);
 110:Core/Src/main.c ****   }
 111:Core/Src/main.c ****   /* USER CODE END 3 */
 112:Core/Src/main.c **** }
 113:Core/Src/main.c **** 
 114:Core/Src/main.c **** /**
 115:Core/Src/main.c ****   * @brief System Clock Configuration
 116:Core/Src/main.c ****   * @retval None
 117:Core/Src/main.c ****   */
 118:Core/Src/main.c **** void SystemClock_Config(void)
 119:Core/Src/main.c **** {
 120:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 121:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 122:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 125:Core/Src/main.c ****   */
 126:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 129:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 130:Core/Src/main.c ****   */
 131:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 132:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 133:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 135:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 136:Core/Src/main.c ****   {
 137:Core/Src/main.c ****     Error_Handler();
 138:Core/Src/main.c ****   }
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 141:Core/Src/main.c ****   */
 142:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 143:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 144:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 145:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 146:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
ARM GAS  C:\Users\flynn\AppData\Local\Temp\ccGmpbYj.s 			page 4


 147:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 150:Core/Src/main.c ****   {
 151:Core/Src/main.c ****     Error_Handler();
 152:Core/Src/main.c ****   }
 153:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2|RCC_PERIPHCLK_I2C1;
 154:Core/Src/main.c ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 155:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 156:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 157:Core/Src/main.c ****   {
 158:Core/Src/main.c ****     Error_Handler();
 159:Core/Src/main.c ****   }
 160:Core/Src/main.c **** }
 161:Core/Src/main.c **** 
 162:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 163:Core/Src/main.c **** 
 164:Core/Src/main.c **** /* USER CODE END 4 */
 165:Core/Src/main.c **** 
 166:Core/Src/main.c **** /**
 167:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 168:Core/Src/main.c ****   * @retval None
 169:Core/Src/main.c ****   */
 170:Core/Src/main.c **** void Error_Handler(void)
 171:Core/Src/main.c **** {
  27              		.loc 1 171 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 172:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 173:Core/Src/main.c ****     /* User can add his own implementation to report the HAL error return state */
 174:Core/Src/main.c ****     __disable_irq();
  33              		.loc 1 174 5 view .LVU1
  34              	.LBB4:
  35              	.LBI4:
  36              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
ARM GAS  C:\Users\flynn\AppData\Local\Temp\ccGmpbYj.s 			page 5


  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
ARM GAS  C:\Users\flynn\AppData\Local\Temp\ccGmpbYj.s 			page 6


  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\flynn\AppData\Local\Temp\ccGmpbYj.s 			page 7


 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  37              		.loc 2 140 27 view .LVU2
  38              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  39              		.loc 2 142 3 view .LVU3
  40              		.syntax divided
  41              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  42 0000 72B6     		cpsid i
  43              	@ 0 "" 2
  44              		.thumb
  45              		.syntax unified
  46              	.L2:
  47              	.LBE5:
  48              	.LBE4:
 175:Core/Src/main.c ****     while (1)
  49              		.loc 1 175 5 discriminator 1 view .LVU4
 176:Core/Src/main.c ****     {
 177:Core/Src/main.c ****     }
  50              		.loc 1 177 5 discriminator 1 view .LVU5
 175:Core/Src/main.c ****     while (1)
  51              		.loc 1 175 11 discriminator 1 view .LVU6
  52 0002 FEE7     		b	.L2
  53              		.cfi_endproc
  54              	.LFE42:
  56              		.section	.text.SystemClock_Config,"ax",%progbits
  57              		.align	1
  58              		.global	SystemClock_Config
  59              		.syntax unified
  60              		.code	16
  61              		.thumb_func
  63              	SystemClock_Config:
  64              	.LFB41:
 119:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  65              		.loc 1 119 1 view -0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 96
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69 0000 00B5     		push	{lr}
  70              	.LCFI0:
  71              		.cfi_def_cfa_offset 4
  72              		.cfi_offset 14, -4
  73 0002 99B0     		sub	sp, sp, #100
  74              	.LCFI1:
  75              		.cfi_def_cfa_offset 104
 120:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  76              		.loc 1 120 3 view .LVU8
 120:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  77              		.loc 1 120 22 is_stmt 0 view .LVU9
  78 0004 3422     		movs	r2, #52
  79 0006 0021     		movs	r1, #0
ARM GAS  C:\Users\flynn\AppData\Local\Temp\ccGmpbYj.s 			page 8


  80 0008 0BA8     		add	r0, sp, #44
  81 000a FFF7FEFF 		bl	memset
  82              	.LVL0:
 121:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
  83              		.loc 1 121 3 is_stmt 1 view .LVU10
 121:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
  84              		.loc 1 121 22 is_stmt 0 view .LVU11
  85 000e 1422     		movs	r2, #20
  86 0010 0021     		movs	r1, #0
  87 0012 06A8     		add	r0, sp, #24
  88 0014 FFF7FEFF 		bl	memset
  89              	.LVL1:
 122:Core/Src/main.c **** 
  90              		.loc 1 122 3 is_stmt 1 view .LVU12
 122:Core/Src/main.c **** 
  91              		.loc 1 122 28 is_stmt 0 view .LVU13
  92 0018 1822     		movs	r2, #24
  93 001a 0021     		movs	r1, #0
  94 001c 6846     		mov	r0, sp
  95 001e FFF7FEFF 		bl	memset
  96              	.LVL2:
 126:Core/Src/main.c **** 
  97              		.loc 1 126 3 is_stmt 1 view .LVU14
  98 0022 1A49     		ldr	r1, .L10
  99 0024 0B68     		ldr	r3, [r1]
 100 0026 1A4A     		ldr	r2, .L10+4
 101 0028 1A40     		ands	r2, r3
 102 002a 8023     		movs	r3, #128
 103 002c 1B01     		lsls	r3, r3, #4
 104 002e 1343     		orrs	r3, r2
 105 0030 0B60     		str	r3, [r1]
 131:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 106              		.loc 1 131 3 view .LVU15
 131:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 107              		.loc 1 131 36 is_stmt 0 view .LVU16
 108 0032 0223     		movs	r3, #2
 109 0034 0B93     		str	r3, [sp, #44]
 132:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 110              		.loc 1 132 3 is_stmt 1 view .LVU17
 132:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 111              		.loc 1 132 30 is_stmt 0 view .LVU18
 112 0036 013B     		subs	r3, r3, #1
 113 0038 0E93     		str	r3, [sp, #56]
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 114              		.loc 1 133 3 is_stmt 1 view .LVU19
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 115              		.loc 1 133 41 is_stmt 0 view .LVU20
 116 003a 0F33     		adds	r3, r3, #15
 117 003c 0F93     		str	r3, [sp, #60]
 134:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 118              		.loc 1 134 3 is_stmt 1 view .LVU21
 134:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 119              		.loc 1 134 34 is_stmt 0 view .LVU22
 120 003e 0023     		movs	r3, #0
 121 0040 1493     		str	r3, [sp, #80]
 135:Core/Src/main.c ****   {
 122              		.loc 1 135 3 is_stmt 1 view .LVU23
ARM GAS  C:\Users\flynn\AppData\Local\Temp\ccGmpbYj.s 			page 9


 135:Core/Src/main.c ****   {
 123              		.loc 1 135 7 is_stmt 0 view .LVU24
 124 0042 0BA8     		add	r0, sp, #44
 125 0044 FFF7FEFF 		bl	HAL_RCC_OscConfig
 126              	.LVL3:
 135:Core/Src/main.c ****   {
 127              		.loc 1 135 6 view .LVU25
 128 0048 0028     		cmp	r0, #0
 129 004a 19D1     		bne	.L7
 142:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 130              		.loc 1 142 3 is_stmt 1 view .LVU26
 142:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 131              		.loc 1 142 31 is_stmt 0 view .LVU27
 132 004c 0F23     		movs	r3, #15
 133 004e 0693     		str	r3, [sp, #24]
 144:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 134              		.loc 1 144 3 is_stmt 1 view .LVU28
 144:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 135              		.loc 1 144 34 is_stmt 0 view .LVU29
 136 0050 0E3B     		subs	r3, r3, #14
 137 0052 0793     		str	r3, [sp, #28]
 145:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 138              		.loc 1 145 3 is_stmt 1 view .LVU30
 145:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 139              		.loc 1 145 35 is_stmt 0 view .LVU31
 140 0054 0023     		movs	r3, #0
 141 0056 0893     		str	r3, [sp, #32]
 146:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 142              		.loc 1 146 3 is_stmt 1 view .LVU32
 146:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 143              		.loc 1 146 36 is_stmt 0 view .LVU33
 144 0058 0993     		str	r3, [sp, #36]
 147:Core/Src/main.c **** 
 145              		.loc 1 147 3 is_stmt 1 view .LVU34
 147:Core/Src/main.c **** 
 146              		.loc 1 147 36 is_stmt 0 view .LVU35
 147 005a 0A93     		str	r3, [sp, #40]
 149:Core/Src/main.c ****   {
 148              		.loc 1 149 3 is_stmt 1 view .LVU36
 149:Core/Src/main.c ****   {
 149              		.loc 1 149 7 is_stmt 0 view .LVU37
 150 005c 0021     		movs	r1, #0
 151 005e 06A8     		add	r0, sp, #24
 152 0060 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 153              	.LVL4:
 149:Core/Src/main.c ****   {
 154              		.loc 1 149 6 view .LVU38
 155 0064 0028     		cmp	r0, #0
 156 0066 0DD1     		bne	.L8
 153:Core/Src/main.c ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 157              		.loc 1 153 3 is_stmt 1 view .LVU39
 153:Core/Src/main.c ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 158              		.loc 1 153 38 is_stmt 0 view .LVU40
 159 0068 0A23     		movs	r3, #10
 160 006a 0093     		str	r3, [sp]
 154:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 161              		.loc 1 154 3 is_stmt 1 view .LVU41
ARM GAS  C:\Users\flynn\AppData\Local\Temp\ccGmpbYj.s 			page 10


 154:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 162              		.loc 1 154 38 is_stmt 0 view .LVU42
 163 006c 0023     		movs	r3, #0
 164 006e 0293     		str	r3, [sp, #8]
 155:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 165              		.loc 1 155 3 is_stmt 1 view .LVU43
 155:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 166              		.loc 1 155 36 is_stmt 0 view .LVU44
 167 0070 0493     		str	r3, [sp, #16]
 156:Core/Src/main.c ****   {
 168              		.loc 1 156 3 is_stmt 1 view .LVU45
 156:Core/Src/main.c ****   {
 169              		.loc 1 156 7 is_stmt 0 view .LVU46
 170 0072 6846     		mov	r0, sp
 171 0074 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 172              	.LVL5:
 156:Core/Src/main.c ****   {
 173              		.loc 1 156 6 view .LVU47
 174 0078 0028     		cmp	r0, #0
 175 007a 05D1     		bne	.L9
 160:Core/Src/main.c **** 
 176              		.loc 1 160 1 view .LVU48
 177 007c 19B0     		add	sp, sp, #100
 178              		@ sp needed
 179 007e 00BD     		pop	{pc}
 180              	.L7:
 137:Core/Src/main.c ****   }
 181              		.loc 1 137 5 is_stmt 1 view .LVU49
 182 0080 FFF7FEFF 		bl	Error_Handler
 183              	.LVL6:
 184              	.L8:
 151:Core/Src/main.c ****   }
 185              		.loc 1 151 5 view .LVU50
 186 0084 FFF7FEFF 		bl	Error_Handler
 187              	.LVL7:
 188              	.L9:
 158:Core/Src/main.c ****   }
 189              		.loc 1 158 5 view .LVU51
 190 0088 FFF7FEFF 		bl	Error_Handler
 191              	.LVL8:
 192              	.L11:
 193              		.align	2
 194              	.L10:
 195 008c 00700040 		.word	1073770496
 196 0090 FFE7FFFF 		.word	-6145
 197              		.cfi_endproc
 198              	.LFE41:
 200              		.section	.text.main,"ax",%progbits
 201              		.align	1
 202              		.global	main
 203              		.syntax unified
 204              		.code	16
 205              		.thumb_func
 207              	main:
 208              	.LFB40:
  69:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 209              		.loc 1 69 1 view -0
ARM GAS  C:\Users\flynn\AppData\Local\Temp\ccGmpbYj.s 			page 11


 210              		.cfi_startproc
 211              		@ Volatile: function does not return.
 212              		@ args = 0, pretend = 0, frame = 8
 213              		@ frame_needed = 0, uses_anonymous_args = 0
 214 0000 00B5     		push	{lr}
 215              	.LCFI2:
 216              		.cfi_def_cfa_offset 4
 217              		.cfi_offset 14, -4
 218 0002 83B0     		sub	sp, sp, #12
 219              	.LCFI3:
 220              		.cfi_def_cfa_offset 16
  71:Core/Src/main.c ****   /* USER CODE END 1 */
 221              		.loc 1 71 5 view .LVU53
  77:Core/Src/main.c **** 
 222              		.loc 1 77 3 view .LVU54
 223 0004 FFF7FEFF 		bl	HAL_Init
 224              	.LVL9:
  80:Core/Src/main.c ****   /* USER CODE END Init */
 225              		.loc 1 80 3 view .LVU55
 226 0008 FFF7FEFF 		bl	FSM_init
 227              	.LVL10:
  84:Core/Src/main.c **** 
 228              		.loc 1 84 3 view .LVU56
 229 000c FFF7FEFF 		bl	SystemClock_Config
 230              	.LVL11:
  91:Core/Src/main.c ****   MX_I2C1_Init();
 231              		.loc 1 91 3 view .LVU57
 232 0010 FFF7FEFF 		bl	MX_GPIO_Init
 233              	.LVL12:
  92:Core/Src/main.c ****   MX_USART2_UART_Init();
 234              		.loc 1 92 3 view .LVU58
 235 0014 FFF7FEFF 		bl	MX_I2C1_Init
 236              	.LVL13:
  93:Core/Src/main.c ****   MX_TIM2_Init();
 237              		.loc 1 93 3 view .LVU59
 238 0018 FFF7FEFF 		bl	MX_USART2_UART_Init
 239              	.LVL14:
  94:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 240              		.loc 1 94 3 view .LVU60
 241 001c FFF7FEFF 		bl	MX_TIM2_Init
 242              	.LVL15:
  96:Core/Src/main.c ****   /* USER CODE END 2 */
 243              		.loc 1 96 3 view .LVU61
 244 0020 FFF7FEFF 		bl	PWM1_start
 245              	.LVL16:
 246              	.L13:
 101:Core/Src/main.c ****   {
 247              		.loc 1 101 3 discriminator 1 view .LVU62
 106:Core/Src/main.c ****     // Update FSM TODO
 248              		.loc 1 106 5 discriminator 1 view .LVU63
 249 0024 0348     		ldr	r0, .L14
 250 0026 FFF7FEFF 		bl	FSM_reciveCMD
 251              	.LVL17:
 109:Core/Src/main.c ****   }
 252              		.loc 1 109 5 discriminator 1 view .LVU64
 253 002a 01A8     		add	r0, sp, #4
 254 002c FFF7FEFF 		bl	FSM_step
ARM GAS  C:\Users\flynn\AppData\Local\Temp\ccGmpbYj.s 			page 12


 255              	.LVL18:
 101:Core/Src/main.c ****   {
 256              		.loc 1 101 9 discriminator 1 view .LVU65
 257 0030 F8E7     		b	.L13
 258              	.L15:
 259 0032 C046     		.align	2
 260              	.L14:
 261 0034 00000000 		.word	huart2
 262              		.cfi_endproc
 263              	.LFE40:
 265              		.text
 266              	.Letext0:
 267              		.file 3 "c:\\users\\flynn\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 268              		.file 4 "c:\\users\\flynn\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 269              		.file 5 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l031xx.h"
 270              		.file 6 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 271              		.file 7 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rcc.h"
 272              		.file 8 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rcc_ex.h"
 273              		.file 9 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_dma.h"
 274              		.file 10 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_uart.h"
 275              		.file 11 "Core/Inc/fsm.h"
 276              		.file 12 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal.h"
 277              		.file 13 "Core/Inc/gpio.h"
 278              		.file 14 "Core/Inc/i2c.h"
 279              		.file 15 "Core/Inc/usart.h"
 280              		.file 16 "Core/Inc/tim.h"
 281              		.file 17 "Core/Inc/pwm.h"
 282              		.file 18 "<built-in>"
ARM GAS  C:\Users\flynn\AppData\Local\Temp\ccGmpbYj.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
C:\Users\flynn\AppData\Local\Temp\ccGmpbYj.s:18     .text.Error_Handler:0000000000000000 $t
C:\Users\flynn\AppData\Local\Temp\ccGmpbYj.s:24     .text.Error_Handler:0000000000000000 Error_Handler
C:\Users\flynn\AppData\Local\Temp\ccGmpbYj.s:57     .text.SystemClock_Config:0000000000000000 $t
C:\Users\flynn\AppData\Local\Temp\ccGmpbYj.s:63     .text.SystemClock_Config:0000000000000000 SystemClock_Config
C:\Users\flynn\AppData\Local\Temp\ccGmpbYj.s:195    .text.SystemClock_Config:000000000000008c $d
C:\Users\flynn\AppData\Local\Temp\ccGmpbYj.s:201    .text.main:0000000000000000 $t
C:\Users\flynn\AppData\Local\Temp\ccGmpbYj.s:207    .text.main:0000000000000000 main
C:\Users\flynn\AppData\Local\Temp\ccGmpbYj.s:261    .text.main:0000000000000034 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
FSM_init
MX_GPIO_Init
MX_I2C1_Init
MX_USART2_UART_Init
MX_TIM2_Init
PWM1_start
FSM_reciveCMD
FSM_step
huart2
