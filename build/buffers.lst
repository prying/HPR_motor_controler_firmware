ARM GAS  C:\Users\flynn\AppData\Local\Temp\ccmijyBU.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"buffers.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.initCycBuff,"ax",%progbits
  18              		.align	1
  19              		.global	initCycBuff
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	initCycBuff:
  25              	.LVL0:
  26              	.LFB0:
  27              		.file 1 "Core/Src/buffers.c"
   1:Core/Src/buffers.c **** /*
   2:Core/Src/buffers.c ****  * buffers.c
   3:Core/Src/buffers.c ****  *
   4:Core/Src/buffers.c ****  *  Created on: 5 Aug 2021
   5:Core/Src/buffers.c ****  *      Author: flynn
   6:Core/Src/buffers.c ****  */
   7:Core/Src/buffers.c **** 
   8:Core/Src/buffers.c **** #include "buffers.h"
   9:Core/Src/buffers.c **** #include <string.h>
  10:Core/Src/buffers.c **** 
  11:Core/Src/buffers.c **** // Sets up cyc buff
  12:Core/Src/buffers.c **** void initCycBuff(cyclicBuffer_s * cb)
  13:Core/Src/buffers.c **** {
  28              		.loc 1 13 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 13 1 is_stmt 0 view .LVU1
  33 0000 10B5     		push	{r4, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
  38 0002 0300     		movs	r3, r0
  14:Core/Src/buffers.c **** 	// Initilise read and write
  15:Core/Src/buffers.c **** 	cb->rp = cb->buffer;
  39              		.loc 1 15 2 is_stmt 1 view .LVU2
  40              		.loc 1 15 11 is_stmt 0 view .LVU3
  41 0004 0830     		adds	r0, r0, #8
  42              	.LVL1:
  43              		.loc 1 15 9 view .LVU4
ARM GAS  C:\Users\flynn\AppData\Local\Temp\ccmijyBU.s 			page 2


  44 0006 1860     		str	r0, [r3]
  16:Core/Src/buffers.c **** 	cb->wp = cb->buffer;
  45              		.loc 1 16 2 is_stmt 1 view .LVU5
  46              		.loc 1 16 9 is_stmt 0 view .LVU6
  47 0008 5860     		str	r0, [r3, #4]
  17:Core/Src/buffers.c **** 
  18:Core/Src/buffers.c **** 	// Initilise with the empty value
  19:Core/Src/buffers.c **** 	memset(cb->buffer, CYCBUF_EMPTY, CYCBUF_SIZE);
  48              		.loc 1 19 2 is_stmt 1 view .LVU7
  49 000a 0121     		movs	r1, #1
  50 000c 0A22     		movs	r2, #10
  51 000e 4942     		rsbs	r1, r1, #0
  52 0010 FFF7FEFF 		bl	memset
  53              	.LVL2:
  20:Core/Src/buffers.c **** }
  54              		.loc 1 20 1 is_stmt 0 view .LVU8
  55              		@ sp needed
  56 0014 10BD     		pop	{r4, pc}
  57              		.cfi_endproc
  58              	.LFE0:
  60              		.section	.text.enqueueCycBuff,"ax",%progbits
  61              		.align	1
  62              		.global	enqueueCycBuff
  63              		.syntax unified
  64              		.code	16
  65              		.thumb_func
  67              	enqueueCycBuff:
  68              	.LVL3:
  69              	.LFB1:
  21:Core/Src/buffers.c **** 
  22:Core/Src/buffers.c **** void enqueueCycBuff(cyclicBuffer_s * cb, int data)
  23:Core/Src/buffers.c **** {
  70              		.loc 1 23 1 is_stmt 1 view -0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              		@ link register save eliminated.
  24:Core/Src/buffers.c **** 	int *nwp;
  75              		.loc 1 24 2 view .LVU10
  25:Core/Src/buffers.c **** 
  26:Core/Src/buffers.c **** 	// Save data
  27:Core/Src/buffers.c **** 	*(cb->wp) = data;
  76              		.loc 1 27 2 view .LVU11
  77              		.loc 1 27 6 is_stmt 0 view .LVU12
  78 0000 4368     		ldr	r3, [r0, #4]
  79              		.loc 1 27 12 view .LVU13
  80 0002 1960     		str	r1, [r3]
  28:Core/Src/buffers.c **** 
  29:Core/Src/buffers.c **** 	// Move the write pointer
  30:Core/Src/buffers.c **** 	nwp = cb->wp + 1 >= cb->buffer + CYCBUF_SIZE ? cb->buffer : cb->wp + 1;
  81              		.loc 1 30 2 is_stmt 1 view .LVU14
  82              		.loc 1 30 10 is_stmt 0 view .LVU15
  83 0004 4268     		ldr	r2, [r0, #4]
  84              		.loc 1 30 15 view .LVU16
  85 0006 131D     		adds	r3, r2, #4
  86              		.loc 1 30 33 view .LVU17
  87 0008 0100     		movs	r1, r0
ARM GAS  C:\Users\flynn\AppData\Local\Temp\ccmijyBU.s 			page 3


  88              	.LVL4:
  89              		.loc 1 30 33 view .LVU18
  90 000a 3031     		adds	r1, r1, #48
  91              		.loc 1 30 60 view .LVU19
  92 000c 8B42     		cmp	r3, r1
  93 000e 01D3     		bcc	.L3
  94              		.loc 1 30 60 discriminator 1 view .LVU20
  95 0010 0300     		movs	r3, r0
  96 0012 0833     		adds	r3, r3, #8
  97              	.L3:
  98              	.LVL5:
  31:Core/Src/buffers.c **** 	// Collision detect
  32:Core/Src/buffers.c **** 	cb->wp = cb->rp == nwp ? cb->wp : nwp;
  99              		.loc 1 32 2 is_stmt 1 discriminator 4 view .LVU21
 100              		.loc 1 32 34 is_stmt 0 discriminator 4 view .LVU22
 101 0014 0168     		ldr	r1, [r0]
 102 0016 9942     		cmp	r1, r3
 103 0018 01D0     		beq	.L6
 104              	.LVL6:
 105              	.L4:
 106              		.loc 1 32 9 discriminator 4 view .LVU23
 107 001a 4360     		str	r3, [r0, #4]
  33:Core/Src/buffers.c **** }
 108              		.loc 1 33 1 discriminator 4 view .LVU24
 109              		@ sp needed
 110 001c 7047     		bx	lr
 111              	.LVL7:
 112              	.L6:
  32:Core/Src/buffers.c **** }
 113              		.loc 1 32 34 view .LVU25
 114 001e 1300     		movs	r3, r2
 115              	.LVL8:
  32:Core/Src/buffers.c **** }
 116              		.loc 1 32 34 view .LVU26
 117 0020 FBE7     		b	.L4
 118              		.cfi_endproc
 119              	.LFE1:
 121              		.section	.text.dequeueCycBuff,"ax",%progbits
 122              		.align	1
 123              		.global	dequeueCycBuff
 124              		.syntax unified
 125              		.code	16
 126              		.thumb_func
 128              	dequeueCycBuff:
 129              	.LVL9:
 130              	.LFB2:
  34:Core/Src/buffers.c **** 
  35:Core/Src/buffers.c **** int dequeueCycBuff(cyclicBuffer_s * cb)
  36:Core/Src/buffers.c **** {
 131              		.loc 1 36 1 is_stmt 1 view -0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135              		.loc 1 36 1 is_stmt 0 view .LVU28
 136 0000 10B5     		push	{r4, lr}
 137              	.LCFI1:
 138              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\flynn\AppData\Local\Temp\ccmijyBU.s 			page 4


 139              		.cfi_offset 4, -8
 140              		.cfi_offset 14, -4
 141 0002 0300     		movs	r3, r0
  37:Core/Src/buffers.c **** 	int data;
 142              		.loc 1 37 2 is_stmt 1 view .LVU29
  38:Core/Src/buffers.c **** 	int *nrp;
 143              		.loc 1 38 2 view .LVU30
  39:Core/Src/buffers.c **** 
  40:Core/Src/buffers.c **** 	// Get data and if its a empty value leave and dont move read pointer
  41:Core/Src/buffers.c **** 	data = *(cb->rp);
 144              		.loc 1 41 2 view .LVU31
 145              		.loc 1 41 13 is_stmt 0 view .LVU32
 146 0004 0268     		ldr	r2, [r0]
 147              		.loc 1 41 7 view .LVU33
 148 0006 1068     		ldr	r0, [r2]
 149              	.LVL10:
  42:Core/Src/buffers.c **** 	if (data == CYCBUF_EMPTY)
 150              		.loc 1 42 2 is_stmt 1 view .LVU34
 151              		.loc 1 42 5 is_stmt 0 view .LVU35
 152 0008 411C     		adds	r1, r0, #1
 153 000a 0ED0     		beq	.L7
  43:Core/Src/buffers.c **** 		return data;
  44:Core/Src/buffers.c **** 	*(cb->rp) = CYCBUF_EMPTY;
 154              		.loc 1 44 2 is_stmt 1 view .LVU36
 155              		.loc 1 44 12 is_stmt 0 view .LVU37
 156 000c 0121     		movs	r1, #1
 157 000e 4942     		rsbs	r1, r1, #0
 158 0010 1160     		str	r1, [r2]
  45:Core/Src/buffers.c **** 
  46:Core/Src/buffers.c **** 	// Move the read pointer
  47:Core/Src/buffers.c **** 	nrp = cb->rp + 1 >= cb->buffer + CYCBUF_SIZE ? cb->buffer : cb->rp + 1;
 159              		.loc 1 47 2 is_stmt 1 view .LVU38
 160              		.loc 1 47 10 is_stmt 0 view .LVU39
 161 0012 1968     		ldr	r1, [r3]
 162              		.loc 1 47 15 view .LVU40
 163 0014 0A1D     		adds	r2, r1, #4
 164              		.loc 1 47 33 view .LVU41
 165 0016 1C00     		movs	r4, r3
 166 0018 3034     		adds	r4, r4, #48
 167              		.loc 1 47 60 view .LVU42
 168 001a A242     		cmp	r2, r4
 169 001c 01D3     		bcc	.L9
 170              		.loc 1 47 60 discriminator 1 view .LVU43
 171 001e 1A00     		movs	r2, r3
 172 0020 0832     		adds	r2, r2, #8
 173              	.L9:
 174              	.LVL11:
  48:Core/Src/buffers.c **** 	// Collision detect
  49:Core/Src/buffers.c **** 	cb->rp = cb->wp == nrp ? cb->rp : nrp;
 175              		.loc 1 49 2 is_stmt 1 discriminator 4 view .LVU44
 176              		.loc 1 49 34 is_stmt 0 discriminator 4 view .LVU45
 177 0022 5C68     		ldr	r4, [r3, #4]
 178 0024 9442     		cmp	r4, r2
 179 0026 01D0     		beq	.L12
 180              	.LVL12:
 181              	.L10:
 182              		.loc 1 49 9 discriminator 4 view .LVU46
ARM GAS  C:\Users\flynn\AppData\Local\Temp\ccmijyBU.s 			page 5


 183 0028 1A60     		str	r2, [r3]
  50:Core/Src/buffers.c **** 
  51:Core/Src/buffers.c **** 	return data;
 184              		.loc 1 51 2 is_stmt 1 discriminator 4 view .LVU47
 185              	.L7:
  52:Core/Src/buffers.c **** }
 186              		.loc 1 52 1 is_stmt 0 view .LVU48
 187              		@ sp needed
 188 002a 10BD     		pop	{r4, pc}
 189              	.LVL13:
 190              	.L12:
  49:Core/Src/buffers.c **** 
 191              		.loc 1 49 34 view .LVU49
 192 002c 0A00     		movs	r2, r1
 193              	.LVL14:
  49:Core/Src/buffers.c **** 
 194              		.loc 1 49 34 view .LVU50
 195 002e FBE7     		b	.L10
 196              		.cfi_endproc
 197              	.LFE2:
 199              		.text
 200              	.Letext0:
 201              		.file 2 "Core/Inc/buffers.h"
 202              		.file 3 "c:\\users\\flynn\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
ARM GAS  C:\Users\flynn\AppData\Local\Temp\ccmijyBU.s 			page 6


DEFINED SYMBOLS
                            *ABS*:0000000000000000 buffers.c
C:\Users\flynn\AppData\Local\Temp\ccmijyBU.s:18     .text.initCycBuff:0000000000000000 $t
C:\Users\flynn\AppData\Local\Temp\ccmijyBU.s:24     .text.initCycBuff:0000000000000000 initCycBuff
C:\Users\flynn\AppData\Local\Temp\ccmijyBU.s:61     .text.enqueueCycBuff:0000000000000000 $t
C:\Users\flynn\AppData\Local\Temp\ccmijyBU.s:67     .text.enqueueCycBuff:0000000000000000 enqueueCycBuff
C:\Users\flynn\AppData\Local\Temp\ccmijyBU.s:122    .text.dequeueCycBuff:0000000000000000 $t
C:\Users\flynn\AppData\Local\Temp\ccmijyBU.s:128    .text.dequeueCycBuff:0000000000000000 dequeueCycBuff

UNDEFINED SYMBOLS
memset
